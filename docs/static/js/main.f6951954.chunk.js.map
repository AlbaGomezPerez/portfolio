{"version":3,"sources":["components/Header.js","components/Attributes.js","components/Level.js","components/InfoLevel.js","components/Description.js","components/GeneralStatus.js","components/Filters.js","components/Results.js","components/EmployeeStatus.js","components/Main.js","components/Footer.js","services/careerPath.js","App.js","index.js"],"names":["Header","className","title","Attributes","props","careerInfo","getAttributeId","isClicked","attributeId","Title","Typography","level","map","item","key","newid","id","onClick","category","type","currentLevel","displayName","Level","getLevelInfo","levelSelected","marks","0","1","2","3","4","5","value","onChange","max","defaultValue","InfoLevel","milestone","attributeObject","summary","signals","signal","examples","example","Description","description","image","Empty","PRESENTED_IMAGE_SIMPLE","milestones","filter","milstone","includes","GeneralStatus","defaultObject","xs","span","sm","md","offset","Filters","Option","Select","htmlFor","placeholder","showSearch","style","width","Results","percent","strokeColor","strokeWidth","EmployeeStatus","lg","xl","showInfo","Main","Footer","Layout","textAlign","careerPath","fetch","then","response","text","RJSON","parse","data","Object","values","sort","a","b","localeCompare","App","state","bind","this","getCareerInfo","event","currentAttributeId","parseInt","currentTarget","newClicked","setState","newData","index","find","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yhBAUeA,G,OANA,WACb,OACE,kBAAC,IAAD,CAAYC,UAAU,gBAAgBC,MAAO,yBAAKD,UAAU,qB,6CC+BjDE,G,OAhCI,SAACC,GAAW,IAE3BC,EAIED,EAJFC,WACAC,EAGEF,EAHFE,eACAC,EAEEH,EAFFG,UACAC,EACEJ,EADFI,YAEMC,EAAUC,IAAVD,MAER,OACE,yBAAKR,UAAU,yBACb,kBAACQ,EAAD,CAAOE,MAAO,EAAGV,UAAU,qBAA3B,kCACA,wBAAIA,UAAU,oBACXI,EAAWO,KAAI,SAACC,GACf,OACE,wBAAIZ,UAAU,mBAAmBa,IAAKD,EAAKE,OACzC,kBAAC,IAAD,CAAQC,GAAIH,EAAKE,MAAOE,QAASX,EAAgBL,UAAS,kBAAaY,EAAKK,SAAlB,YAA8BX,GAAcC,IAAgBK,EAAKE,OAAU,YAAcI,KAAK,WAAxJ,UAAsKN,EAAKO,cAAgB,KAA3L,cAAqMP,EAAKQ,sB,0BCgBzMC,G,OAhCD,SAAClB,GAAW,IAEtBmB,EAEEnB,EAFFmB,aACAC,EACEpB,EADFoB,cAWF,OACE,6BACE,kBAAC,IAAD,CACEC,MAZQ,CACZC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAOCC,MAAOR,GAAiB,EACxBS,SAAUV,EACVW,IAAK,EACLC,aAAc,OCoBPC,G,OAxCG,SAAChC,GAAW,IAE1BiC,EAEEjC,EAFFiC,UACAC,EACElC,EADFkC,gBAEM7B,EAAUC,IAAVD,MAER,OACE,oCACE,yBAAKR,UAAU,gCACb,yBAAKA,UAAS,6BAAwBqC,EAAgBpB,WAAaoB,EAAgBlB,cACnF,yBAAKnB,UAAU,mBACb,uBAAGA,UAAU,sBAAsBoC,EAAUE,SAC7C,kBAAC9B,EAAD,CAAOE,MAAO,EAAGV,UAAU,kCAA3B,sBACA,wBAAIA,UAAU,4BACXoC,EAAUG,QAAQ5B,KAAI,SAAC6B,GACtB,OACE,wBAAIxC,UAAU,2BAA2Ba,IAAK2B,GAASA,OAI7D,kBAAChC,EAAD,CAAOE,MAAO,EAAGV,UAAU,+BAA3B,kBACA,wBAAIA,UAAU,wBACXoC,EAAUK,SAAS9B,KAAI,SAAC+B,GACvB,OACE,wBAAI1C,UAAU,uBAAuBa,IAAK6B,GAAUA,YCgBrDC,EAxCK,SAACxC,GAAW,IAE5BkC,EAEElC,EAFFkC,gBACAf,EACEnB,EADFmB,aAEMd,EAAUC,IAAVD,MAER,OACE,yBAAKR,UAAU,0BACZqC,EACC,yBAAKrC,UAAU,qBACb,kBAACQ,EAAD,CAAOR,UAAU,wBAAwBU,MAAO,GAAhD,4CACA,kBAACF,EAAD,CAAOR,UAAS,8BAAyBqC,EAAgBpB,UAAYP,MAAO,GAAI2B,EAAgBjB,aAChG,uBAAGpB,UAAS,6BAAwBqC,EAAgBpB,WAAaoB,EAAgBO,aACjF,yBAAK5C,UAAS,uEAAkEqC,EAAgBpB,WAC9F,kBAAC,EAAD,CAAOjB,UAAS,yBAAoBqC,EAAgBpB,SAApC,KAAiDK,aAAcA,EAAcC,cAAec,EAAgBlB,eAC1F,IAAjCkB,EAAgBlB,cAAsB,kBAAC,IAAD,CAAO0B,MAAOC,IAAMC,yBAC3D,yBAAK/C,UAAU,aACZqC,EAAgBW,WACdC,QAAO,SAACC,GAAD,OAAcA,EAASxC,MAAMyC,SAASd,EAAgBlB,iBAC7DR,KAAI,SAACyB,GACJ,OACE,kBAAC,EAAD,CAAWA,UAAWA,EAAWC,gBAAiBA,UAO9D,6CCcOe,EA5CO,SAACjD,GAAW,IAE9BkC,EAOElC,EAPFkC,gBACAf,EAMEnB,EANFmB,aACA+B,EAKElD,EALFkD,cACAjD,EAIED,EAJFC,WACAC,EAGEF,EAHFE,eACAC,EAEEH,EAFFG,UACAC,EACEJ,EADFI,YAGF,OACE,yBAAKP,UAAU,4BACb,kBAAC,IAAD,CAAKA,UAAU,4BACb,kBAAC,IAAD,CAAKsD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IACnD,kBAAC,EAAD,CACEnD,WAAYA,EACZC,eAAgBA,EAChBC,UAAWA,EACXC,YAAaA,KAGjB,kBAAC,IAAD,CAAK+C,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,GAAIG,OAAQ,IAC/D,kBAAC,EAAD,CACErB,gBAAiBA,EACjBf,aAAcA,EACd+B,cAAeA,Q,oCCGZM,G,OA9BC,WAAO,IACbC,EAAWC,IAAXD,OAER,OACE,yBAAK5D,UAAU,qBACb,2BAAOA,UAAU,gBAAgB8D,QAAQ,gBAAzC,aACA,kBAAC,IAAD,CAAO/C,GAAG,eAAegD,YAAY,kBAAkB/D,UAAU,uBAEjE,2BAAOA,UAAU,gBAAgB8D,QAAQ,eAAzC,kBACA,kBAAC,IAAD,CACEE,YAAU,EACVC,MAAO,CAAEC,MAAO,KAChBH,YAAY,wBACZhD,GAAG,cACHf,UAAU,qBAEV,kBAAC4D,EAAD,CAAQ7B,MAAM,YAAd,YACA,kBAAC6B,EAAD,CAAQ7B,MAAM,2BAAd,8BACA,kBAAC6B,EAAD,CAAQ7B,MAAM,0BAAd,6BACA,kBAAC6B,EAAD,CAAQ7B,MAAM,kCAAd,qCACA,kBAAC6B,EAAD,CAAQ7B,MAAM,4BAAd,+BACA,kBAAC6B,EAAD,CAAQ7B,MAAM,eAAd,gBACA,kBAAC6B,EAAD,CAAQ7B,MAAM,kBAAd,mBACA,kBAAC6B,EAAD,CAAQ7B,MAAM,gBAAd,iBACA,kBAAC6B,EAAD,CAAQ7B,MAAM,UAAd,cCWOoC,G,OApCC,WAAO,IACb3D,EAAUC,IAAVD,MAER,OACE,yBAAKR,UAAU,sBACb,kBAACQ,EAAD,CAAOR,UAAU,iBAAiBU,MAAO,GAAzC,WACA,kBAAC,IAAD,CAAKV,UAAU,mBACb,kBAAC,IAAD,CAAKsD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,EAAGG,OAAQ,GAAKD,GAAI,CAAEF,KAAM,EAAGG,OAAQ,IACxE,yBAAK1D,UAAU,qBACb,yBAAKA,UAAU,kBAAf,OACA,uBAAGA,UAAU,oBAAb,kBAGJ,kBAAC,IAAD,CAAKsD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,EAAGG,OAAQ,GAAKD,GAAI,CAAEF,KAAM,EAAGG,OAAQ,IACxE,yBAAK1D,UAAU,qBACb,yBAAKA,UAAU,kBAAf,OACA,uBAAGA,UAAU,oBAAb,kBAGJ,kBAAC,IAAD,CAAKsD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,EAAGG,OAAQ,GAAKD,GAAI,CAAEF,KAAM,EAAGG,OAAQ,IACxE,yBAAK1D,UAAU,qBACb,yBAAKA,UAAU,kBAAf,OACA,uBAAGA,UAAU,oBAAb,2BAIN,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAAUA,UAAU,qBAAqBkB,KAAK,SAASkD,QAAS,GAAIC,YAAY,UAAUC,YAAa,KACvG,kBAAC,IAAD,CAAUtE,UAAU,qBAAqBkB,KAAK,SAASkD,QAAS,GAAIC,YAAY,UAAUC,YAAa,KACvG,kBAAC,IAAD,CAAUtE,UAAU,qBAAqBkB,KAAK,SAASkD,QAAS,GAAIC,YAAY,UAAUC,YAAa,KACvG,kBAAC,IAAD,CAAUtE,UAAU,qBAAqBkB,KAAK,SAASkD,QAAS,GAAIC,YAAY,UAAUC,YAAa,SCYhGC,EAvCQ,WAAO,IACpB/D,EAAUC,IAAVD,MAER,OACE,yBAAKR,UAAU,6BACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKuD,KAAM,IACT,yBAAKvD,UAAU,gCACb,kBAACQ,EAAD,CAAOR,UAAU,cAAcU,MAAO,GAAtC,WACA,wBAAIV,UAAU,qBACZ,wBAAIA,UAAU,cAAd,0EACA,wBAAIA,UAAU,cAAd,wMACA,wBAAIA,UAAU,cAAd,+MAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKsD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,IAAME,GAAI,CAAEF,KAAM,IAAMiB,GAAI,CAAEjB,KAAM,IAAMkB,GAAI,CAAElB,KAAM,IACvF,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKD,GAAI,CAAEC,KAAM,IAAMC,GAAI,CAAED,KAAM,GAAIG,OAAQ,GAAKD,GAAI,CAAEF,KAAM,IAAMiB,GAAI,CAAEjB,KAAM,GAAIG,OAAQ,GAAKe,GAAI,CAAElB,KAAM,GAAIG,OAAQ,IACzH,kBAAC,EAAD,QAGJ,kBAAC,IAAD,CACE1D,UAAU,wBACVqE,YAAa,CACX,KAAM,UACN,OAAQ,WAEVD,QAAS,IACTM,UAAU,EACVJ,YAAa,MCGNK,EArCF,SAACxE,GAAW,IAErBkC,EAOElC,EAPFkC,gBACAf,EAMEnB,EANFmB,aACA+B,EAKElD,EALFkD,cACAjD,EAIED,EAJFC,WACAC,EAGEF,EAHFE,eACAC,EAEEH,EAFFG,UACAC,EACEJ,EADFI,YAGF,OACE,yBAAKP,UAAU,mBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEI,WAAYA,EACZC,eAAgBA,EAChBgC,gBAAiBA,EACjBf,aAAcA,EACd+B,cAAeA,EACf/C,UAAWA,EACXC,YAAaA,M,SChBNqE,EARA,WAAO,IACZA,EAAWC,IAAXD,OAER,OACE,kBAACA,EAAD,CAAQX,MAAO,CAAEa,UAAW,WAA5B,gD,kBCMWC,EATI,kBAAMC,MAFR,oDAGdC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUC,IAAMC,MAAMF,MAC3BF,MAAK,SAACK,GAEL,OADmBC,OAAOC,OAAOF,GAAMG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzE,SAAS2E,cAAcD,EAAE1E,iB,kOC4EtE4E,E,YA3Eb,WAAY1F,GAAQ,IAAD,8BACjB,4CAAMA,KACD2F,MAAQ,CACX1F,WAAY,GACZG,YAAa,EACb8C,cAAe,GACf/C,WAAW,GAGb,EAAKD,eAAiB,EAAKA,eAAe0F,KAApB,gBACtB,EAAKzE,aAAe,EAAKA,aAAayE,KAAlB,gBAVH,E,iFAcjBC,KAAKC,kB,qCAGQC,GACb,IAAMC,EAAqBC,SAASF,EAAMG,cAActF,GAAI,IADxC,EAEeiF,KAAKF,MAAhCxF,EAFY,EAEZA,UAEFgG,EAAcH,IAJA,EAED5F,aAEuCD,GAAcA,EAExE0F,KAAKO,SAAS,CACZhG,YAAa4F,EACb7F,UAAWgG,M,sCAIE,IAAD,OACdvB,IACGE,MAAK,SAACK,GACL,IAAMkB,EAAUlB,EAAK3E,KAAI,SAACC,EAAM6F,GAC9B,O,yVAAO,CAAP,GAAY7F,EAAZ,CAAkBE,MAAO2F,EAAQ,EAAGtF,aAAc,OAGpD,EAAKoF,SAAS,CACZnG,WAAYoG,EACZnD,cAAemD,EAAQ,U,mCAKlBzE,GAAQ,IAAD,EACkBiE,KAAKF,MAAjC1F,EADU,EACVA,WAAYG,EADF,EACEA,YACGH,EAAWsG,MAAK,SAAC9F,GAAD,OAAUA,EAAKE,QAAUP,KACjDY,aAAeY,EAE9BiE,KAAKO,SAAS,CACZnG,WAAW,YAAKA,O,+BAIV,IAAD,EACuD4F,KAAKF,MAA3D1F,EADD,EACCA,WAAYG,EADb,EACaA,YAAa8C,EAD1B,EAC0BA,cAAe/C,EADzC,EACyCA,UAC1C+B,EAAkBjC,EAAWsG,MAAK,SAAC9F,GAAD,OAAUA,EAAKE,QAAUP,KAEjE,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEI,WAAYA,EACZiC,gBAAiBA,EACjBhC,eAAgB2F,KAAK3F,eACrBgD,cAAeA,EACf/B,aAAc0E,KAAK1E,aACnBhB,UAAWA,EACXC,YAAaA,IAEf,kBAAC,EAAD,W,GAtEUoG,IAAMC,WCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f6951954.chunk.js","sourcesContent":["import React from 'react';\nimport { PageHeader } from 'antd';\nimport '../styles/header.css';\n\nconst Header = () => {\n  return (\n    <PageHeader className=\"header__title\" title={<div className=\"header__logo\" />} />\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Button, Typography } from 'antd';\nimport '../styles/attributes.css';\nimport PropTypes from 'prop-types';\n\nconst Attributes = (props) => {\n  const {\n    careerInfo,\n    getAttributeId,\n    isClicked,\n    attributeId\n  } = props;\n  const { Title } = Typography;\n\n  return (\n    <div className=\"attributes__container\">\n      <Title level={3} className=\"attributes__title\">1: Select an area of expertise</Title>\n      <ul className=\"attributes__list\">\n        {careerInfo.map((item) => {\n          return (\n            <li className=\"attributes__item\" key={item.newid}>\n              <Button id={item.newid} onClick={getAttributeId} className={`button--${item.category} ${isClicked && (attributeId === item.newid) && 'selected'}`} type=\"primary\">{`${item.currentLevel || '##'} | ${item.displayName}`}</Button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nAttributes.propTypes = {\n  careerInfo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getAttributeId: PropTypes.func.isRequired,\n  isClicked: PropTypes.bool.isRequired,\n  attributeId: PropTypes.number.isRequired\n};\n\nexport default Attributes;\n","import React from 'react';\nimport { Slider } from 'antd';\nimport '../styles/level.css';\nimport PropTypes from 'prop-types';\n\nconst Level = (props) => {\n  const {\n    getLevelInfo,\n    levelSelected\n  } = props;\n  const marks = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5\n  };\n\n  return (\n    <div>\n      <Slider\n        marks={marks}\n        value={levelSelected || 0}\n        onChange={getLevelInfo}\n        max={5}\n        defaultValue={0}\n      />\n    </div>\n  );\n};\n\nLevel.propTypes = {\n  getLevelInfo: PropTypes.func.isRequired,\n  levelSelected: PropTypes.number\n};\n\nexport default Level;\n","import React from 'react';\nimport { Typography } from 'antd';\nimport '../styles/infoLevel.css';\nimport PropTypes from 'prop-types';\n\n\nconst InfoLevel = (props) => {\n  const {\n    milestone,\n    attributeObject\n  } = props;\n  const { Title } = Typography;\n\n  return (\n    <>\n      <div className=\"levelInfo__number__container\">\n        <div className={`levelInfo__number--${attributeObject.category}`}>{attributeObject.currentLevel}</div>\n        <div className=\"levelInfo__text\">\n          <p className=\"levelInfo__summary\">{milestone.summary}</p>\n          <Title level={4} className=\"levelInfo__behaviors title__h4\">Examples behaviors</Title>\n          <ul className=\"levelInfo__behavior-list\">\n            {milestone.signals.map((signal) => {\n              return (\n                <li className=\"levelInfo__behavior-item\" key={signal}>{signal}</li>\n              );\n            })}\n          </ul>\n          <Title level={4} className=\"levelInfo__taskst title__h4\">Examples Tasks</Title>\n          <ul className=\"levelInfo__task-list\">\n            {milestone.examples.map((example) => {\n              return (\n                <li className=\"levelInfo__task-item\" key={example}>{example}</li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    </>\n  );\n};\n\nInfoLevel.propTypes = {\n  milestone: PropTypes.object.isRequired,\n  attributeObject: PropTypes.object.isRequired\n};\n\nexport default InfoLevel;\n","import React from 'react';\nimport { Typography, Empty } from 'antd';\nimport '../styles/description.css';\nimport PropTypes from 'prop-types';\nimport Level from './Level';\nimport InfoLevel from './InfoLevel';\n\nconst Description = (props) => {\n  const {\n    attributeObject,\n    getLevelInfo,\n  } = props;\n  const { Title } = Typography;\n\n  return (\n    <div className=\"description__container\">\n      {attributeObject ? (\n        <div className=\"description__info\">\n          <Title className=\"description__subtitle\" level={3}>2: Rank the area (5 levels of expertise)</Title>\n          <Title className={`description__title--${attributeObject.category}`} level={2}>{attributeObject.displayName}</Title>\n          <p className={`description__text--${attributeObject.category}`}>{attributeObject.description}</p>\n          <div className={`description__level__container description__level__container--${attributeObject.category}`}>\n            <Level className={`level__slider--${attributeObject.category}}`} getLevelInfo={getLevelInfo} levelSelected={attributeObject.currentLevel} />\n            {attributeObject.currentLevel === 0 && <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />}\n            <div className=\"levelInfo\">\n              {attributeObject.milestones\n                .filter((milstone) => milstone.level.includes(attributeObject.currentLevel))\n                .map((milestone) => {\n                  return (\n                    <InfoLevel milestone={milestone} attributeObject={attributeObject} />\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </div>\n  );\n};\n\nDescription.propTypes = {\n  attributeObject: PropTypes.object,\n  getLevelInfo: PropTypes.func.isRequired,\n};\n\nexport default Description;\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport PropTypes from 'prop-types';\nimport Attributes from './Attributes';\nimport Description from './Description';\n\nconst GeneralStatus = (props) => {\n  const {\n    attributeObject,\n    getLevelInfo,\n    defaultObject,\n    careerInfo,\n    getAttributeId,\n    isClicked,\n    attributeId\n  } = props;\n\n  return (\n    <div className=\"generalStatus__container\">\n      <Row className=\"generalStatus__container\">\n        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 6 }}>\n          <Attributes\n            careerInfo={careerInfo}\n            getAttributeId={getAttributeId}\n            isClicked={isClicked}\n            attributeId={attributeId}\n          />\n        </Col>\n        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 16, offset: 2 }}>\n          <Description\n            attributeObject={attributeObject}\n            getLevelInfo={getLevelInfo}\n            defaultObject={defaultObject}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nGeneralStatus.propTypes = {\n  attributeObject: PropTypes.object,\n  getLevelInfo: PropTypes.func.isRequired,\n  defaultObject: PropTypes.object.isRequired,\n  careerInfo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getAttributeId: PropTypes.func.isRequired,\n  isClicked: PropTypes.bool.isRequired,\n  attributeId: PropTypes.number.isRequired\n};\n\nexport default GeneralStatus;\n","import React from 'react';\nimport { Select, Input } from 'antd';\nimport '../styles/filters.css';\n\n\nconst Filters = () => {\n  const { Option } = Select;\n\n  return (\n    <div className=\"filter__container\">\n      <label className=\"filter__label\" htmlFor=\"name__filter\">Your name</label>\n      <Input id=\"name__filter\" placeholder=\"Enter your name\" className=\"filter__input-name\" />\n\n      <label className=\"filter__label\" htmlFor=\"job__filter\">Your job title</label>\n      <Select\n        showSearch\n        style={{ width: 200 }}\n        placeholder=\"Choose your job title\"\n        id=\"job__filter\"\n        className=\"filter__input-job\"\n      >\n        <Option value=\"Graduate\">Graduate</Option>\n        <Option value=\"JuniorFrontEndDeveloper\">Junior Front-end Developer</Option>\n        <Option value=\"JuniorBackEndDeveloper\">Junior Back-end Developer</Option>\n        <Option value=\"IntermediateFullStackDeveloper\">Intermediate Full-stack Developer</Option>\n        <Option value=\"SeniorFullStackDeveloper\">Senior Full-stack Developer</Option>\n        <Option value=\"ScrumMaster\">Scrum Master</Option>\n        <Option value=\"ProductManager\">Product Manager</Option>\n        <Option value=\"SystemsAdmin\">Systems Admin</Option>\n        <Option value=\"DevOps\">DevOps</Option>\n      </Select>\n    </div>\n  );\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Typography, Progress, Row, Col } from 'antd';\nimport '../styles/results.css';\n\nconst Results = () => {\n  const { Title } = Typography;\n\n  return (\n    <div className=\"results__container\">\n      <Title className=\"results__title\" level={1}>Results</Title>\n      <Row className=\"points__section\">\n        <Col xs={{ span: 24 }} sm={{ span: 7, offset: 1 }} md={{ span: 7, offset: 1 }}>\n          <div className=\"points__container\">\n            <div className=\"points__number\">###</div>\n            <p className=\"points__subtitle\">Total points</p>\n          </div>\n        </Col>\n        <Col xs={{ span: 24 }} sm={{ span: 7, offset: 1 }} md={{ span: 7, offset: 1 }}>\n          <div className=\"points__container\">\n            <div className=\"points__number\">###</div>\n            <p className=\"points__subtitle\">Total points</p>\n          </div>\n        </Col>\n        <Col xs={{ span: 24 }} sm={{ span: 7, offset: 1 }} md={{ span: 7, offset: 1 }}>\n          <div className=\"points__container\">\n            <div className=\"points__number\">###</div>\n            <p className=\"points__subtitle\">Points to next level</p>\n          </div>\n        </Col>\n      </Row>\n      <div className=\"percentage__section\">\n        <Progress className=\"percentage__circle\" type=\"circle\" percent={75} strokeColor=\"#5C5CEA\" strokeWidth={10} />\n        <Progress className=\"percentage__circle\" type=\"circle\" percent={70} strokeColor=\"#A8BC3B\" strokeWidth={10} />\n        <Progress className=\"percentage__circle\" type=\"circle\" percent={89} strokeColor=\"#CA1551\" strokeWidth={10} />\n        <Progress className=\"percentage__circle\" type=\"circle\" percent={56} strokeColor=\"#FDB833\" strokeWidth={10} />\n      </div>\n    </div>\n  );\n};\n\nexport default Results;\n","import React from 'react';\nimport { Typography, Col, Row, Progress } from 'antd';\nimport '../styles/employeeStatus.css';\nimport Filters from './Filters';\nimport Results from './Results';\n\n\nconst EmployeeStatus = () => {\n  const { Title } = Typography;\n\n  return (\n    <div className=\"employeeStatus__container\">\n      <Row>\n        <Col span={24}>\n          <div className=\"page__description__container\">\n            <Title className=\"page__title\" level={2}>Tealify</Title>\n            <ul className=\"description__list\">\n              <li className=\"list__item\"> Tealify is a transparency tool to define career paths in Tech teams. </li>\n              <li className=\"list__item\">  By selecting each area, grouped in categories, the user can inspect the different levels of expertise (ranked from 0 to 5 points). Each level represents a list of expected behaviours and tasks. </li>\n              <li className=\"list__item\"> Once all the areas have been ranked, the progress circle visualization will show us the percentage of mastery in each category. Based on that, a dropdown will suggest different names for job titles.</li>\n            </ul>\n          </div>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={{ span: 24 }} sm={{ span: 24 }} md={{ span: 24 }} lg={{ span: 24 }} xl={{ span: 8 }}>\n          <Filters />\n        </Col>\n        <Col xs={{ span: 24 }} sm={{ span: 23, offset: 1 }} md={{ span: 24 }} lg={{ span: 22, offset: 2 }} xl={{ span: 15, offset: 1 }}>\n          <Results />\n        </Col>\n      </Row>\n      <Progress\n        className=\"employee-status__line\"\n        strokeColor={{\n          '0%': '#108ee9',\n          '100%': '#87d068',\n        }}\n        percent={100}\n        showInfo={false}\n        strokeWidth={2}\n      />\n    </div>\n  );\n};\n\nexport default EmployeeStatus;\n","import React from 'react';\nimport '../styles/main.css';\nimport PropTypes from 'prop-types';\nimport GeneralStatus from './GeneralStatus';\nimport EmployeeStatus from './EmployeeStatus';\n\nconst Main = (props) => {\n  const {\n    attributeObject,\n    getLevelInfo,\n    defaultObject,\n    careerInfo,\n    getAttributeId,\n    isClicked,\n    attributeId\n  } = props;\n\n  return (\n    <div className=\"main__container\">\n      <EmployeeStatus />\n      <GeneralStatus\n        careerInfo={careerInfo}\n        getAttributeId={getAttributeId}\n        attributeObject={attributeObject}\n        getLevelInfo={getLevelInfo}\n        defaultObject={defaultObject}\n        isClicked={isClicked}\n        attributeId={attributeId}\n      />\n    </div>\n  );\n};\n\nMain.propTypes = {\n  attributeObject: PropTypes.object,\n  getLevelInfo: PropTypes.func.isRequired,\n  defaultObject: PropTypes.object.isRequired,\n  careerInfo: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getAttributeId: PropTypes.func.isRequired,\n  isClicked: PropTypes.bool.isRequired,\n  attributeId: PropTypes.number.isRequired\n};\n\nexport default Main;\n","import React from 'react';\nimport { Layout } from 'antd';\n\nconst Footer = () => {\n  const { Footer } = Layout;\n\n  return (\n    <Footer style={{ textAlign: 'center' }}>Bridge for Billions ©2019 Created by B4B</Footer>\n  );\n};\n\nexport default Footer;\n","import RJSON from 'relaxed-json';\n\nconst ENDPOINT = 'https://www.mocky.io/v2/5d9375f530000078001b752a';\n\nconst careerPath = () => fetch(ENDPOINT)\n  .then((response) => response.text())\n  .then((text) => RJSON.parse(text))\n  .then((data) => {\n    const categories = Object.values(data).sort((a, b) => a.category.localeCompare(b.category));\n    return categories;\n  });\n\n\nexport default careerPath;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './styles/app.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\nimport careerPath from './services/careerPath';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      careerInfo: [],\n      attributeId: 1,\n      defaultObject: {},\n      isClicked: true\n    };\n\n    this.getAttributeId = this.getAttributeId.bind(this);\n    this.getLevelInfo = this.getLevelInfo.bind(this);\n  }\n\n  componentDidMount() {\n    this.getCareerInfo();\n  }\n\n  getAttributeId(event) {\n    const currentAttributeId = parseInt(event.currentTarget.id, 10);\n    const { isClicked, attributeId } = this.state;\n\n    const newClicked = (currentAttributeId === attributeId && isClicked) || isClicked;\n\n    this.setState({\n      attributeId: currentAttributeId,\n      isClicked: newClicked\n    });\n  }\n\n  getCareerInfo() {\n    careerPath()\n      .then((data) => {\n        const newData = data.map((item, index) => {\n          return { ...item, newid: index + 1, currentLevel: 0 };\n        });\n\n        this.setState({\n          careerInfo: newData,\n          defaultObject: newData[0]\n        });\n      });\n  }\n\n  getLevelInfo(value) {\n    const { careerInfo, attributeId } = this.state;\n    const attributeLevel = careerInfo.find((item) => item.newid === attributeId);\n    attributeLevel.currentLevel = value;\n\n    this.setState({\n      careerInfo: [...careerInfo]\n    });\n  }\n\n  render() {\n    const { careerInfo, attributeId, defaultObject, isClicked } = this.state;\n    const attributeObject = careerInfo.find((item) => item.newid === attributeId);\n\n    return (\n      <div className=\"app\">\n        <Header />\n        <Main\n          careerInfo={careerInfo}\n          attributeObject={attributeObject}\n          getAttributeId={this.getAttributeId}\n          defaultObject={defaultObject}\n          getLevelInfo={this.getLevelInfo}\n          isClicked={isClicked}\n          attributeId={attributeId}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}